/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_drozdik_m_user_pages"] = self["webpackChunk_drozdik_m_user_pages"] || []).push([["common"],{

/***/ "./node_modules/@drozdik.m/avl-tree/dist/src/AVLTree.js":
/*!**************************************************************!*\
  !*** ./node_modules/@drozdik.m/avl-tree/dist/src/AVLTree.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("exports.__esModule = true;\r\nvar AVLTreeNode_1 = __webpack_require__(/*! ./AVLTreeNode */ \"./node_modules/@drozdik.m/avl-tree/dist/src/AVLTreeNode.js\");\r\nvar comparator_handler_1 = __webpack_require__(/*! @drozdik.m/comparator-handler */ \"./node_modules/@drozdik.m/comparator-handler/dist/src/ComparatorHandler.js\");\r\nvar AVLTreeIterator_1 = __webpack_require__(/*! ./AVLTreeIterator */ \"./node_modules/@drozdik.m/avl-tree/dist/src/AVLTreeIterator.js\");\r\nvar AVLTree = /** @class */ (function () {\r\n    //--------------------------------------------------\r\n    //---------CONSTRUCTOR------------------------------\r\n    //--------------------------------------------------\r\n    /**\r\n     * Creates new instance of the object.\r\n     * @param items Initial items in the binary search tree.\r\n     * @param comparator Comparator - It automatically detects IComparable classes.\r\n     */\r\n    function AVLTree(items, comparator) {\r\n        if (items === void 0) { items = []; }\r\n        if (comparator === void 0) { comparator = null; }\r\n        //--------------------------------------------------\r\n        //----------VARIABLES-------------------------------\r\n        //--------------------------------------------------\r\n        this.comparator = null;\r\n        this.root = null;\r\n        this.comparator = new comparator_handler_1.ComparatorHandler(comparator);\r\n        this.Build(items);\r\n    }\r\n    //--------------------------------------------------\r\n    //---------VALUE------------------------------------\r\n    //--------------------------------------------------\r\n    AVLTree.prototype.Insert = function (item) {\r\n        this.root = this.InsertRec(item, this.root);\r\n        this.root.parent = null;\r\n    };\r\n    /**\r\n     * Recursive insert method\r\n     * @param value Value to insert\r\n     * @param node Current node\r\n     */\r\n    AVLTree.prototype.InsertRec = function (value, node) {\r\n        //Bottom reached, return new node\r\n        if (node == null)\r\n            return new AVLTreeNode_1.AVLTreeNode(value);\r\n        //Go to left subtree\r\n        if (this.comparator.Compare(value, node.value) == -1)\r\n            node.left = this.InsertRec(value, node.left);\r\n        //Go to right subtree\r\n        else if (this.comparator.Compare(value, node.value) == 1)\r\n            node.right = this.InsertRec(value, node.right);\r\n        node.Update();\r\n        //This value already exists\r\n        return this.RotateAdvisorInsert(node);\r\n    };\r\n    AVLTree.prototype.Find = function (item) {\r\n        return new AVLTreeIterator_1.AVLTreeIterator(this.FindNode(item));\r\n    };\r\n    /**\r\n     * Return node by inserted value\r\n     * @param item\r\n     */\r\n    AVLTree.prototype.FindNode = function (item) {\r\n        return this.FindRec(item, this.root);\r\n    };\r\n    /**\r\n     * Recursive function for searching\r\n     * @param value Value\r\n     * @param node Current/Initial node\r\n     */\r\n    AVLTree.prototype.FindRec = function (value, node) {\r\n        //Bottom reached, not found, return null\r\n        if (node == null)\r\n            return null;\r\n        //Go left\r\n        if (this.comparator.Compare(node.value, value) == 1)\r\n            return this.FindRec(value, node.left);\r\n        //Go right\r\n        else if (this.comparator.Compare(node.value, value) == -1)\r\n            return this.FindRec(value, node.right);\r\n        //Found the node\r\n        return node;\r\n    };\r\n    AVLTree.prototype.RemoveAt = function (iterator) {\r\n        if (!iterator.HasValue())\r\n            return;\r\n        this.root = this.DeleteRec(iterator.Value(), this.root);\r\n        if (this.root != null)\r\n            this.root.parent == null;\r\n    };\r\n    AVLTree.prototype.Remove = function (item) {\r\n        this.RemoveAt(this.Find(item));\r\n    };\r\n    /**\r\n     * Recursive function sor deleting\r\n     * @param value Value to delete\r\n     * @param node Current node/Initial node\r\n     */\r\n    AVLTree.prototype.DeleteRec = function (value, node) {\r\n        //At the bottom\r\n        if (node == null)\r\n            return null;\r\n        //Go left\r\n        if (this.comparator.Compare(value, node.value) == -1)\r\n            node.left = this.DeleteRec(value, node.left);\r\n        //Go right\r\n        else if (this.comparator.Compare(value, node.value) == 1)\r\n            node.right = this.DeleteRec(value, node.right);\r\n        //Found the node\r\n        else {\r\n            //No children\r\n            if (node.left == null && node.right == null)\r\n                return null;\r\n            //Child on right side\r\n            else if (node.left == null)\r\n                return node.right;\r\n            //Child on left side\r\n            else if (node.right == null)\r\n                return node.left;\r\n            //Two children\r\n            var successor = this.FindMinRec(node.right);\r\n            node.value = successor.value;\r\n            node.right = this.DeleteRec(successor.value, node.right);\r\n        }\r\n        //Climbing up\r\n        node.Update();\r\n        return this.RotateAdvisorDelete(node);\r\n    };\r\n    AVLTree.prototype.UpdateAt = function (newValue, iterator) {\r\n        //No value\r\n        if (!iterator.HasValue())\r\n            return;\r\n        //New value already exists\r\n        if (this.Find(newValue).HasValue())\r\n            return;\r\n        //Delete current node\r\n        this.RemoveAt(iterator);\r\n        //Insert node with new value\r\n        this.Insert(newValue);\r\n    };\r\n    AVLTree.prototype.Update = function (oldValue, newValue) {\r\n        this.UpdateAt(newValue, this.Find(oldValue));\r\n    };\r\n    //--------------------------------------------------\r\n    //---------AT---------------------------------------\r\n    //--------------------------------------------------\r\n    AVLTree.prototype.At = function (index) {\r\n        return this.AtIterator(index).Value();\r\n    };\r\n    AVLTree.prototype.AtIterator = function (index) {\r\n        //Index out of bounds\r\n        if (index > this.Count() - 1 || index < 0)\r\n            return new AVLTreeIterator_1.AVLTreeIterator(null);\r\n        return new AVLTreeIterator_1.AVLTreeIterator(this.AtRec(index, this.root));\r\n    };\r\n    /**\r\n     * Recursive function for finding nth index\r\n     * @param index Index\r\n     * @param node Initial/Current node\r\n     */\r\n    AVLTree.prototype.AtRec = function (index, node) {\r\n        //Reached the end (should not occur)\r\n        if (node == null)\r\n            return null;\r\n        //Found the node\r\n        if (node.CountLeft() == index)\r\n            return node;\r\n        //Go left\r\n        if (node.CountLeft() > index)\r\n            return this.AtRec(index, node.left);\r\n        //Go right\r\n        else\r\n            return this.AtRec(index - node.CountLeft() - 1, node.right);\r\n    };\r\n    //--------------------------------------------------\r\n    //---------MIN-MAX----------------------------------\r\n    //--------------------------------------------------\r\n    AVLTree.prototype.FindMin = function () {\r\n        return new AVLTreeIterator_1.AVLTreeIterator(this.FindMinRec(this.root));\r\n    };\r\n    AVLTree.prototype.FindMinRec = function (node) {\r\n        //Node is null\r\n        if (node == null)\r\n            return null;\r\n        //We are at the most left\r\n        if (node.left == null)\r\n            return node;\r\n        //Go deeper 0===3 (lil joke heh)\r\n        return this.FindMinRec(node.left);\r\n    };\r\n    AVLTree.prototype.FindMax = function () {\r\n        return new AVLTreeIterator_1.AVLTreeIterator(this.FindMaxRec(this.root));\r\n    };\r\n    AVLTree.prototype.FindMaxRec = function (node) {\r\n        //Node is null\r\n        if (node == null)\r\n            return null;\r\n        //We are at the most right\r\n        if (node.right == null)\r\n            return node;\r\n        //Go deeper\r\n        return this.FindMaxRec(node.right);\r\n    };\r\n    //--------------------------------------------------\r\n    //---------CLEARS-----------------------------------\r\n    //--------------------------------------------------\r\n    AVLTree.prototype.Dispose = function () {\r\n        this.Clear();\r\n        this.comparator.Dispose();\r\n    };\r\n    AVLTree.prototype.Clear = function () {\r\n        this.root = null;\r\n    };\r\n    //--------------------------------------------------\r\n    //---------ITERATOR---------------------------------\r\n    //--------------------------------------------------\r\n    AVLTree.prototype.First = function () {\r\n        return this.FindMin();\r\n    };\r\n    AVLTree.prototype.Last = function () {\r\n        return this.FindMax();\r\n    };\r\n    //--------------------------------------------------\r\n    //---------CLONE------------------------------------\r\n    //--------------------------------------------------\r\n    AVLTree.prototype.Clone = function () {\r\n        var res = new AVLTree();\r\n        res.comparator = this.comparator.Clone();\r\n        res.root = this.CloneRec(this.root);\r\n        return res;\r\n    };\r\n    /**\r\n     * Recursive clone function that clones nodes\r\n     * @param node Root/Current node\r\n     * @param parent Nodes parent node\r\n     */\r\n    AVLTree.prototype.CloneRec = function (node, parent) {\r\n        if (parent === void 0) { parent = null; }\r\n        if (node == null)\r\n            return null;\r\n        var res = node.Clone();\r\n        res.left = this.CloneRec(res.left, res);\r\n        res.right = this.CloneRec(res.right, res);\r\n        res.parent = parent;\r\n        return res;\r\n    };\r\n    //--------------------------------------------------\r\n    //---------OTHERS-----------------------------------\r\n    //--------------------------------------------------\r\n    AVLTree.prototype.Build = function (items) {\r\n        for (var i = 0; i < items.length; i++)\r\n            this.Insert(items[i]);\r\n    };\r\n    AVLTree.prototype.Count = function () {\r\n        if (this.root == null)\r\n            return 0;\r\n        return this.root.Count();\r\n    };\r\n    AVLTree.prototype.IsEmpty = function () {\r\n        return this.Count() == 0;\r\n    };\r\n    //--------------------------------------------------\r\n    //---------ROTATIONS--------------------------------\r\n    //--------------------------------------------------\r\n    /**\r\n     * Rotate a node in left direction\r\n     * @param x Node to rotate around\r\n     * @returns Higher node in tree hierarchy\r\n     */\r\n    AVLTree.prototype.RotateLeft = function (x) {\r\n        //Check if parent exists\r\n        if (x == null || x.right == null)\r\n            return null;\r\n        //Get all variables\r\n        var y = x.right;\r\n        var b = y.left;\r\n        //Switcharino\r\n        y.left = x;\r\n        x.right = b;\r\n        //Parents\r\n        if (x.parent != null) {\r\n            y.parent = x.parent;\r\n            //Update parents reference\r\n            if (y.parent.left == x)\r\n                y.parent.left = y;\r\n            else if (y.parent.right == x)\r\n                y.parent.right = y;\r\n        }\r\n        else\r\n            x.parent = null;\r\n        //X was root\r\n        if (x == this.root) {\r\n            this.root = y;\r\n            y.parent = null;\r\n        }\r\n        //Update nodes\r\n        x.Update();\r\n        y.Update();\r\n        return y;\r\n    };\r\n    /**\r\n     * Rotate a node in right direction\r\n     * @param y Node to rotate around\r\n     * @returns Higher node in tree hierarchy\r\n     */\r\n    AVLTree.prototype.RotateRight = function (y) {\r\n        //Check if parent exists\r\n        if (y == null || y.left == null)\r\n            return null;\r\n        //Get all variables\r\n        var x = y.left;\r\n        var b = x.right;\r\n        //Switcharino\r\n        y.left = b;\r\n        x.right = y;\r\n        //Parents\r\n        if (y.parent != null) {\r\n            x.parent = y.parent;\r\n            //Update parents pointer\r\n            if (x.parent.left == y)\r\n                x.parent.left = x;\r\n            else if (x.parent.right == y)\r\n                x.parent.right = x;\r\n        }\r\n        else\r\n            x.parent = null;\r\n        //Y was root\r\n        if (y == this.root) {\r\n            this.root = x;\r\n            x.parent = null;\r\n        }\r\n        //Update nodes\r\n        y.Update();\r\n        x.Update();\r\n        return x;\r\n    };\r\n    /**\r\n     * Rotate a node to left and right\r\n     * @param x Node to rotate around\r\n     * @returns Higher node in tree hierarchy\r\n     */\r\n    AVLTree.prototype.RotateLeftRight = function (x) {\r\n        var y = x.left;\r\n        var z = this.RotateLeft(y);\r\n        this.RotateRight(x);\r\n        return z;\r\n    };\r\n    /**\r\n     * Rotate a node to right and left\r\n     * @param x Node to rotate around\r\n     * @returns Higher node in tree hierarchy\r\n     */\r\n    AVLTree.prototype.RotateRightLeft = function (x) {\r\n        var y = x.right;\r\n        var z = this.RotateRight(y);\r\n        this.RotateLeft(x);\r\n        return z;\r\n    };\r\n    /**\r\n     * Rotates the node if needed.\r\n     * @param node Node to check\r\n     * @returns Higher node in tree hierarchy\r\n     */\r\n    AVLTree.prototype.RotateAdvisorInsert = function (node) {\r\n        //Rotate right needed\r\n        if (node.sign == -2) {\r\n            if (node.left != null) {\r\n                if (node.left.sign == -1)\r\n                    return this.RotateRight(node);\r\n                else if (node.left.sign == 1)\r\n                    return this.RotateLeftRight(node);\r\n            }\r\n        }\r\n        //Rotate left needed\r\n        else if (node.sign == 2) {\r\n            if (node.right != null) {\r\n                if (node.right.sign == 1)\r\n                    return this.RotateLeft(node);\r\n                else if (node.right.sign == -1)\r\n                    return this.RotateRightLeft(node);\r\n            }\r\n        }\r\n        //No rotation needed\r\n        return node;\r\n    };\r\n    /**\r\n     * Rotates the node if needed.\r\n     * @param node Node to check\r\n     * @returns Higher node in tree hierarchy\r\n     */\r\n    AVLTree.prototype.RotateAdvisorDelete = function (node) {\r\n        //Rotate left needed\r\n        if (node.sign == 2) {\r\n            if (node.right != null) {\r\n                if (node.right.sign == 1)\r\n                    return this.RotateLeft(node);\r\n                else if (node.right.sign == 0)\r\n                    return this.RotateLeft(node);\r\n                else if (node.right.sign == -1)\r\n                    return this.RotateRightLeft(node);\r\n            }\r\n        }\r\n        //Rotate right needed\r\n        else if (node.sign == -2) {\r\n            if (node.left != null) {\r\n                if (node.left.sign == -1)\r\n                    return this.RotateRight(node);\r\n                else if (node.left.sign == 0)\r\n                    return this.RotateRight(node);\r\n                else if (node.left.sign == 1)\r\n                    return this.RotateLeftRight(node);\r\n            }\r\n        }\r\n        //No rotation needed\r\n        return node;\r\n    };\r\n    return AVLTree;\r\n}());\r\nexports.AVLTree = AVLTree;\r\n\n\n//# sourceURL=webpack://@drozdik.m/user-pages/./node_modules/@drozdik.m/avl-tree/dist/src/AVLTree.js?");

/***/ }),

/***/ "./node_modules/@drozdik.m/avl-tree/dist/src/AVLTreeIterator.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@drozdik.m/avl-tree/dist/src/AVLTreeIterator.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("exports.__esModule = true;\r\nvar AVLTreeIterator = /** @class */ (function () {\r\n    //--------------------------------------------------\r\n    //----------CONSTRUCTOR-----------------------------\r\n    //--------------------------------------------------\r\n    function AVLTreeIterator(node) {\r\n        //--------------------------------------------------\r\n        //----------VARIABLE--------------------------------\r\n        //-------------------------------------------------\r\n        this.current = null;\r\n        this.current = node;\r\n    }\r\n    //--------------------------------------------------\r\n    //----------VALUE-----------------------------------\r\n    //--------------------------------------------------\r\n    AVLTreeIterator.prototype.Value = function () {\r\n        if (!this.HasValue())\r\n            return null;\r\n        return this.current.value;\r\n    };\r\n    AVLTreeIterator.prototype.HasValue = function () {\r\n        return this.current != null;\r\n    };\r\n    //--------------------------------------------------\r\n    //----------MOVE------------------------------------\r\n    //--------------------------------------------------\r\n    AVLTreeIterator.prototype.Previous = function () {\r\n        this.current = this.Predecessor(this.current);\r\n    };\r\n    AVLTreeIterator.prototype.Next = function () {\r\n        this.current = this.Successor(this.current);\r\n    };\r\n    /**\r\n     * Returns predecessor node to this node\r\n     * @param node Current node\r\n     */\r\n    AVLTreeIterator.prototype.Predecessor = function (node) {\r\n        //Node has left child\r\n        if (node.left != null)\r\n            return this.FindMaxRec(node.left);\r\n        //Climb until pop from left\r\n        var parentNode = node.parent;\r\n        while (parentNode != null && node == parentNode.left) {\r\n            node = parentNode;\r\n            parentNode = parentNode.parent;\r\n        }\r\n        return parentNode;\r\n    };\r\n    /**\r\n     * Returns successor node to this node\r\n     * @param node Current node\r\n     */\r\n    AVLTreeIterator.prototype.Successor = function (node) {\r\n        //Node has right child\r\n        if (node.right != null)\r\n            return this.FindMinRec(node.right);\r\n        //Climb until pop from right\r\n        var parentNode = node.parent;\r\n        while (parentNode != null && node == parentNode.right) {\r\n            node = parentNode;\r\n            parentNode = parentNode.parent;\r\n        }\r\n        return parentNode;\r\n    };\r\n    //--------------------------------------------------\r\n    //----------MIN-MAX---------------------------------\r\n    //--------------------------------------------------\r\n    AVLTreeIterator.prototype.FindMinRec = function (node) {\r\n        //Node is null\r\n        if (node == null)\r\n            return null;\r\n        //We are at the most left\r\n        if (node.left == null)\r\n            return node;\r\n        //Go deeper 0===3 (lil joke heh)\r\n        return this.FindMinRec(node.left);\r\n    };\r\n    AVLTreeIterator.prototype.FindMaxRec = function (node) {\r\n        //Node is null\r\n        if (node == null)\r\n            return null;\r\n        //We are at the most right\r\n        if (node.right == null)\r\n            return node;\r\n        //Go deeper\r\n        return this.FindMaxRec(node.right);\r\n    };\r\n    //--------------------------------------------------\r\n    //----------OTHERS----------------------------------\r\n    //--------------------------------------------------\r\n    /**\r\n    * Returns currently selected node. Do not use unless you know what you are doing!\r\n    * @returns Current node\r\n    */\r\n    AVLTreeIterator.prototype.GetCurrentNode = function () {\r\n        return this.current;\r\n    };\r\n    return AVLTreeIterator;\r\n}());\r\nexports.AVLTreeIterator = AVLTreeIterator;\r\n\n\n//# sourceURL=webpack://@drozdik.m/user-pages/./node_modules/@drozdik.m/avl-tree/dist/src/AVLTreeIterator.js?");

/***/ }),

/***/ "./node_modules/@drozdik.m/avl-tree/dist/src/AVLTreeNode.js":
/*!******************************************************************!*\
  !*** ./node_modules/@drozdik.m/avl-tree/dist/src/AVLTreeNode.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("exports.__esModule = true;\r\nvar AVLTreeNode = /** @class */ (function () {\r\n    //--------------------------------------------------\r\n    //----------CONSTRUCTOR-----------------------------\r\n    //--------------------------------------------------\r\n    function AVLTreeNode(value) {\r\n        //--------------------------------------------------\r\n        //----------VARIABLE--------------------------------\r\n        //--------------------------------------------------\r\n        //Nodes\r\n        this.parent = null;\r\n        this.left = null;\r\n        this.right = null;\r\n        this.count = 1;\r\n        this.depth = 1;\r\n        this.sign = 0;\r\n        this.value = value;\r\n        //this.Update();\r\n    }\r\n    //--------------------------------------------------\r\n    //----------UPDATE----------------------------------\r\n    //--------------------------------------------------\r\n    AVLTreeNode.prototype.Update = function () {\r\n        this.UpdateCount();\r\n        this.UpdateDepth();\r\n        this.UpdateSign();\r\n        this.UpdateChildrensParent();\r\n    };\r\n    //--------------------------------------------------\r\n    //----------PARENT----------------------------------\r\n    //--------------------------------------------------\r\n    AVLTreeNode.prototype.UpdateChildrensParent = function () {\r\n        if (this.left != null)\r\n            this.left.parent = this;\r\n        if (this.right != null)\r\n            this.right.parent = this;\r\n    };\r\n    //--------------------------------------------------\r\n    //----------COUNT-----------------------------------\r\n    //--------------------------------------------------\r\n    /**\r\n     * Returns number of nodes in this (sub)tree (including this one, thus minimum is 1)\r\n     * */\r\n    AVLTreeNode.prototype.Count = function () {\r\n        return this.count;\r\n    };\r\n    /**\r\n     * Returns number of nodes in left subtree. Zero if left subtree is null.\r\n     * */\r\n    AVLTreeNode.prototype.CountLeft = function () {\r\n        return (this.left == null) ? 0 : this.left.Count();\r\n    };\r\n    /**\r\n     * Returns number of nodes in right subtree. Zero if right subtree is null.\r\n     * */\r\n    AVLTreeNode.prototype.CountRight = function () {\r\n        return (this.right == null) ? 0 : this.right.Count();\r\n    };\r\n    /**\r\n     * Updates count number from it's children\r\n     * */\r\n    AVLTreeNode.prototype.UpdateCount = function () {\r\n        this.count = this.CountLeft() + this.CountRight() + 1;\r\n    };\r\n    //--------------------------------------------------\r\n    //----------DEPTH-----------------------------------\r\n    //--------------------------------------------------\r\n    /**\r\n     * Returns depth of this nodes tree. Zero if no children.\r\n     * */\r\n    AVLTreeNode.prototype.Depth = function () {\r\n        return this.depth;\r\n    };\r\n    /**\r\n     * Returns depth of left subtree. Zero if left subtree is null.\r\n     * */\r\n    AVLTreeNode.prototype.DepthLeft = function () {\r\n        return (this.left == null) ? 0 : this.left.depth;\r\n    };\r\n    /**\r\n     * Returns depth of right subtree. Zero if right subtree is null.\r\n     * */\r\n    AVLTreeNode.prototype.DepthRight = function () {\r\n        return (this.right == null) ? 0 : this.right.depth;\r\n    };\r\n    /**\r\n     * Updates depth number from it's children\r\n     * */\r\n    AVLTreeNode.prototype.UpdateDepth = function () {\r\n        var depthLeft = this.DepthLeft();\r\n        var depthRight = this.DepthRight();\r\n        var higherDepth = (depthLeft > depthRight) ? depthLeft : depthRight;\r\n        this.depth = higherDepth + 1;\r\n    };\r\n    /**\r\n     * Updates sign number from it's children\r\n     * */\r\n    AVLTreeNode.prototype.UpdateSign = function () {\r\n        this.sign = this.DepthRight() - this.DepthLeft();\r\n    };\r\n    //--------------------------------------------------\r\n    //----------CLONE-----------------------------------\r\n    //--------------------------------------------------\r\n    AVLTreeNode.prototype.Clone = function () {\r\n        var res = new AVLTreeNode(null);\r\n        //IClonable\r\n        if (this.value != null) {\r\n            if (typeof this.value.Clone != \"undefined\")\r\n                res.value = this.value.Clone();\r\n            else\r\n                res.value = this.value;\r\n        }\r\n        res.left = this.left;\r\n        res.right = this.right;\r\n        res.parent = this.parent;\r\n        res.count = this.count;\r\n        res.depth = this.depth;\r\n        res.sign = this.sign;\r\n        return res;\r\n    };\r\n    return AVLTreeNode;\r\n}());\r\nexports.AVLTreeNode = AVLTreeNode;\r\n\n\n//# sourceURL=webpack://@drozdik.m/user-pages/./node_modules/@drozdik.m/avl-tree/dist/src/AVLTreeNode.js?");

/***/ }),

/***/ "./node_modules/@drozdik.m/comparator-handler/dist/src/ComparatorHandler.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@drozdik.m/comparator-handler/dist/src/ComparatorHandler.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("exports.__esModule = true;\r\nvar default_comparator_1 = __webpack_require__(/*! @drozdik.m/default-comparator */ \"./node_modules/@drozdik.m/default-comparator/dist/src/DefaultComparator.js\");\r\n/**\r\n * Class for easy handling of comparators. If explicit comparator is set, automatic\r\n * recognition of IComparable interface is turned off (on by default). It can be also turned\r\n * off manually. The class starts with default comparator for primitive types.\r\n * @author Martin Drozdík <info@bonsai-development.cz> (http://bonsai-development.cz)\r\n * */\r\nvar ComparatorHandler = /** @class */ (function () {\r\n    //--------------------------------------------------\r\n    //----------CONSTRUCTOR-----------------------------\r\n    //--------------------------------------------------\r\n    /**\r\n     * Creates new instance of ConparatorHandler. If explicit comparator is set,\r\n     * automatic recognition of IEcomparable if turned off.\r\n     * @param comparator Explicit comparator\r\n     */\r\n    function ComparatorHandler(comparator) {\r\n        if (comparator === void 0) { comparator = null; }\r\n        //--------------------------------------------------\r\n        //----------ATTRIBUTES------------------------------\r\n        //--------------------------------------------------\r\n        /**\r\n         * Default comparator function.\r\n         * Returns -1 if a < b\r\n         * Returns 0 if a == b\r\n         * Returns 1 if a > b\r\n         * @param a Item #1\r\n         * @param b Item #2\r\n         */\r\n        this.DefaultComparator = function (a, b) {\r\n            return default_comparator_1.DefaultComparator(a, b);\r\n        };\r\n        this.comparator = this.DefaultComparator;\r\n        this.automaticIComparableRecognition = true;\r\n        if (comparator != null)\r\n            this.SetComparator(comparator);\r\n    }\r\n    //--------------------------------------------------\r\n    //----------METHODS---------------------------------\r\n    //--------------------------------------------------\r\n    ComparatorHandler.prototype.Clone = function () {\r\n        var newComparatorHandler = new ComparatorHandler();\r\n        newComparatorHandler.comparator = this.comparator;\r\n        newComparatorHandler.automaticIComparableRecognition = this.automaticIComparableRecognition;\r\n        return newComparatorHandler;\r\n    };\r\n    /**\r\n     * Sets new comparator to use and turns off the automatic IComparable recognition.\r\n     * @param newComparator? The new comparator (nullable)\r\n     */\r\n    ComparatorHandler.prototype.SetComparator = function (newComparator) {\r\n        if (newComparator == null)\r\n            return;\r\n        this.comparator = newComparator;\r\n        this.automaticIComparableRecognition = false;\r\n    };\r\n    /**\r\n     * Set the automatic recognition on/off\r\n     * @param OnOff True for on, false for off\r\n     */\r\n    ComparatorHandler.prototype.SetAutomaticIComparableRecognition = function (OnOff) {\r\n        this.automaticIComparableRecognition = OnOff;\r\n    };\r\n    /**\r\n     * If automatic IComparable recognition is on, tries to find new comparator.\r\n     * @param item Item to dig in\r\n     */\r\n    ComparatorHandler.prototype.AutomaticIComparableRecognition = function (item) {\r\n        //Is turned off \r\n        if (!this.automaticIComparableRecognition)\r\n            return;\r\n        //Check if T has GetComparator() method\r\n        if (typeof item.GetComparator != \"undefined\")\r\n            this.comparator = item.GetComparator();\r\n    };\r\n    /**\r\n     * Comparator function. If no explicit comparator has been set and automatic IComparable recognition\r\n     * is on, the comparator function is set to a.GetComparator().\r\n     * Returns -1 if a < b\r\n     * Returns 0 if a == b\r\n     * Returns 1 if a > b\r\n     * @param a Item #1\r\n     * @param b Item #2\r\n     */\r\n    ComparatorHandler.prototype.Compare = function (a, b) {\r\n        //Fish for new comparator\r\n        this.AutomaticIComparableRecognition(a);\r\n        //Do the compare\r\n        var res = this.comparator(a, b);\r\n        if (res < 0)\r\n            return -1;\r\n        else if (res > 0)\r\n            return 1;\r\n        return 0;\r\n    };\r\n    ComparatorHandler.prototype.Dispose = function () {\r\n        this.comparator = null;\r\n    };\r\n    return ComparatorHandler;\r\n}());\r\nexports.ComparatorHandler = ComparatorHandler;\r\n\n\n//# sourceURL=webpack://@drozdik.m/user-pages/./node_modules/@drozdik.m/comparator-handler/dist/src/ComparatorHandler.js?");

/***/ }),

/***/ "./node_modules/@drozdik.m/default-comparator/dist/src/DefaultComparator.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@drozdik.m/default-comparator/dist/src/DefaultComparator.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("exports.__esModule = true;\r\n/**\r\n * Default comparator for primitive JavaScript types\r\n * Returns -1 if a < b\r\n * Returns 0 if a == b\r\n * Returns 1 if a > b\r\n * @param a parameter 1\r\n * @param b parameter 2\r\n */\r\nfunction DefaultComparator(a, b) {\r\n    if (a > b)\r\n        return 1;\r\n    if (a < b)\r\n        return -1;\r\n    return 0;\r\n}\r\nexports.DefaultComparator = DefaultComparator;\r\n\n\n//# sourceURL=webpack://@drozdik.m/user-pages/./node_modules/@drozdik.m/default-comparator/dist/src/DefaultComparator.js?");

/***/ }),

/***/ "./node_modules/@drozdik.m/dimensions-helper/dist/src/DimensionsHelper.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@drozdik.m/dimensions-helper/dist/src/DimensionsHelper.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("exports.__esModule = true;\r\nvar DimensionsHelper = /** @class */ (function () {\r\n    //--------------------------------------------------\r\n    //----------CONSTRUCTOR-----------------------------\r\n    //--------------------------------------------------\r\n    /**\r\n     * Creates active container for providing\r\n     * @param element\r\n     */\r\n    function DimensionsHelper(element) {\r\n        this.element = element;\r\n        this.style = getComputedStyle(element);\r\n    }\r\n    //--------------------------------------------------\r\n    //----------WIDTH/HEIGHT----------------------------\r\n    //--------------------------------------------------\r\n    /**\r\n     * Returns width of the element\r\n     * */\r\n    DimensionsHelper.prototype.Width = function () {\r\n        return parseInt(this.style.width);\r\n    };\r\n    /**\r\n     * Returns height of the element\r\n     * */\r\n    DimensionsHelper.prototype.Height = function () {\r\n        return parseInt(this.style.height);\r\n    };\r\n    /**\r\n     * Sets new width to the element\r\n     * @param width New width\r\n     */\r\n    DimensionsHelper.prototype.SetWidth = function (width) {\r\n        this.element.style.width = width + \"px\";\r\n    };\r\n    /**\r\n     * Sets new height to the element\r\n     * @param height New height\r\n     */\r\n    DimensionsHelper.prototype.SetHeight = function (height) {\r\n        this.element.style.height = height + \"px\";\r\n    };\r\n    //--------------------------------------------------\r\n    //----------PADDING---------------------------------\r\n    //--------------------------------------------------\r\n    /**\r\n     * Returns width with padding of the element\r\n     * */\r\n    DimensionsHelper.prototype.WidthWithPadding = function () {\r\n        return this.element.clientWidth;\r\n    };\r\n    /**\r\n     * Returns height with padding of the element\r\n     * */\r\n    DimensionsHelper.prototype.HeightWithPadding = function () {\r\n        return this.element.clientHeight;\r\n    };\r\n    //--------------------------------------------------\r\n    //----------BORDER----------------------------------\r\n    //--------------------------------------------------\r\n    /**\r\n     * Returns width with padding and border of the element\r\n     * */\r\n    DimensionsHelper.prototype.WidthWithBorder = function () {\r\n        return this.element.offsetWidth;\r\n    };\r\n    /**\r\n     * Returns height with padding and border of the element\r\n     * */\r\n    DimensionsHelper.prototype.HeightWithBorder = function () {\r\n        return this.element.offsetHeight;\r\n    };\r\n    //--------------------------------------------------\r\n    //----------MARGIN----------------------------------\r\n    //--------------------------------------------------\r\n    /**\r\n     * Returns width with padding, border and margin of the element\r\n     * */\r\n    DimensionsHelper.prototype.WidthWithMargin = function () {\r\n        var marginLeft = parseInt(this.style.marginLeft);\r\n        var marginRight = parseInt(this.style.marginRight);\r\n        return this.WidthWithBorder() + marginLeft + marginRight;\r\n    };\r\n    /**\r\n     * Returns height with padding, border and margin of the element\r\n     * */\r\n    DimensionsHelper.prototype.HeightWithMargin = function () {\r\n        var marginTop = parseInt(this.style.marginTop);\r\n        var marginBottom = parseInt(this.style.marginBottom);\r\n        return this.HeightWithBorder() + marginTop + marginBottom;\r\n    };\r\n    return DimensionsHelper;\r\n}());\r\nexports.DimensionsHelper = DimensionsHelper;\r\n\n\n//# sourceURL=webpack://@drozdik.m/user-pages/./node_modules/@drozdik.m/dimensions-helper/dist/src/DimensionsHelper.js?");

/***/ }),

/***/ "./node_modules/@drozdik.m/double-linked-list/dist/src/List.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@drozdik.m/double-linked-list/dist/src/List.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("exports.__esModule = true;\r\nvar ListNode_1 = __webpack_require__(/*! ./ListNode */ \"./node_modules/@drozdik.m/double-linked-list/dist/src/ListNode.js\");\r\nvar ListIterator_1 = __webpack_require__(/*! ./ListIterator */ \"./node_modules/@drozdik.m/double-linked-list/dist/src/ListIterator.js\");\r\nvar comparator_handler_1 = __webpack_require__(/*! @drozdik.m/comparator-handler */ \"./node_modules/@drozdik.m/comparator-handler/dist/src/ComparatorHandler.js\");\r\n//--------------------------------------------------\r\n//----------LIST------------------------------------\r\n//--------------------------------------------------\r\nvar List = /** @class */ (function () {\r\n    //(back)item---item---item---item(front)\r\n    //--------------------------------------------------\r\n    //---------CONSTRUCTOR------------------------------\r\n    //--------------------------------------------------\r\n    /**\r\n     * Creates new instance of List.\r\n     * @param items Initial items in the List.\r\n     * @param comparator Comparator for search functions. It automatically detects IComparable classes.\r\n     */\r\n    function List(items, comparator) {\r\n        if (items === void 0) { items = []; }\r\n        if (comparator === void 0) { comparator = null; }\r\n        //--------------------------------------------------\r\n        //----------VARIABLES-------------------------------\r\n        //--------------------------------------------------\r\n        this.count = 0;\r\n        this.front = null;\r\n        this.back = null;\r\n        this.comparator = null;\r\n        for (var i = 0; i < items.length; i++)\r\n            this.Insert(items[i]);\r\n        this.comparator = new comparator_handler_1.ComparatorHandler(comparator);\r\n    }\r\n    //--------------------------------------------------\r\n    //----------ITERATOR--------------------------------\r\n    //--------------------------------------------------\r\n    List.prototype.First = function () {\r\n        return new ListIterator_1.ListIterator(this.back);\r\n    };\r\n    List.prototype.Last = function () {\r\n        return new ListIterator_1.ListIterator(this.front);\r\n    };\r\n    //--------------------------------------------------\r\n    //----------COUNT-----------------------------------\r\n    //--------------------------------------------------\r\n    List.prototype.Count = function () {\r\n        return this.count;\r\n    };\r\n    List.prototype.IsEmpty = function () {\r\n        return this.Count() == 0;\r\n    };\r\n    //--------------------------------------------------\r\n    //----------CLEARS----------------------------------\r\n    //--------------------------------------------------\r\n    List.prototype.Dispose = function () {\r\n        this.count = -1;\r\n        this.front = null;\r\n        this.back = null;\r\n        this.comparator.Dispose();\r\n    };\r\n    List.prototype.Clear = function () {\r\n        this.count = 0;\r\n        this.front = null;\r\n        this.back = null;\r\n    };\r\n    //--------------------------------------------------\r\n    //----------INDEXES---------------------------------\r\n    //--------------------------------------------------\r\n    List.prototype.AtIterator = function (index) {\r\n        var curr = this.back;\r\n        for (var i = 0; i < index; i++) {\r\n            //Return \"not found\"\r\n            if (curr == null)\r\n                return new ListIterator_1.ListIterator(null);\r\n            //Move\r\n            curr = curr.next;\r\n        }\r\n        return new ListIterator_1.ListIterator(curr);\r\n    };\r\n    List.prototype.At = function (index) {\r\n        var res = this.AtIterator(index);\r\n        if (res == null)\r\n            return null;\r\n        return res.Value();\r\n    };\r\n    //--------------------------------------------------\r\n    //----------CLONE-----------------------------------\r\n    //--------------------------------------------------\r\n    List.prototype.Clone = function () {\r\n        var resArr = [];\r\n        for (var it = this.First(); it.HasValue(); it.Next()) {\r\n            if (it.Value() != null) {\r\n                if (typeof it.Value().Clone != \"undefined\")\r\n                    resArr.push(it.Value().Clone());\r\n                else\r\n                    resArr.push(it.Value());\r\n            }\r\n            else\r\n                resArr.push(null);\r\n        }\r\n        var res = new List(resArr);\r\n        res.comparator = this.comparator.Clone();\r\n        return res;\r\n    };\r\n    //--------------------------------------------------\r\n    //----------FIND------------------------------------\r\n    //--------------------------------------------------\r\n    List.prototype.Find = function (item) {\r\n        for (var it = this.First(); it.HasValue(); it.Next()) {\r\n            if (this.comparator.Compare(it.Value(), item) == 0)\r\n                return new ListIterator_1.ListIterator(it.GetCurrentNode());\r\n        }\r\n        return new ListIterator_1.ListIterator(null);\r\n    };\r\n    //--------------------------------------------------\r\n    //----------UPDATE----------------------------------\r\n    //--------------------------------------------------\r\n    List.prototype.UpdateAt = function (newValue, iterator) {\r\n        iterator.GetCurrentNode().value = newValue;\r\n    };\r\n    List.prototype.Update = function (oldValue, newValue) {\r\n        var it = this.Find(oldValue);\r\n        if (it != null)\r\n            it.GetCurrentNode().value = newValue;\r\n    };\r\n    //--------------------------------------------------\r\n    //----------INSERT----------------------------------\r\n    //--------------------------------------------------\r\n    List.prototype.Insert = function (item) {\r\n        this.InsertFront(item);\r\n    };\r\n    /**\r\n    * Adds first node - O(1)\r\n    * @param value Value to add\r\n    */\r\n    List.prototype.AddFirst = function (value) {\r\n        //Create new node\r\n        var newNode = new ListNode_1.ListNode(value);\r\n        //Add it\r\n        this.front = newNode;\r\n        this.back = newNode;\r\n        this.count++;\r\n    };\r\n    /**\r\n     * Inserts a node after position selected by the iterator - O(1)\r\n     * @param value Value to add\r\n     * @param iterator Position iterator\r\n     */\r\n    List.prototype.InsertAfter = function (value, iterator) {\r\n        //Nulls\r\n        if (iterator == null)\r\n            return;\r\n        var addAfterNode = iterator.GetCurrentNode();\r\n        if (addAfterNode == null)\r\n            return;\r\n        //New nodes next\r\n        var newNodesNext = null;\r\n        if (addAfterNode.next != null)\r\n            newNodesNext = addAfterNode.next;\r\n        //New nodes previous\r\n        var newNodesPrevious = addAfterNode;\r\n        //New node\r\n        var newNode = new ListNode_1.ListNode(value, newNodesNext, newNodesPrevious);\r\n        //Redirect pointers to the new node\r\n        addAfterNode.next = newNode;\r\n        if (newNodesNext != null)\r\n            newNodesNext.previous = newNode;\r\n        //Change \"back\" if new node is the last one\r\n        if (newNode.next == null)\r\n            this.front = newNode;\r\n    };\r\n    /**\r\n     * Inserts a node before position selected by iterator - O(1)\r\n     * @param value Value to add\r\n     * @param iterator Position iterator\r\n     */\r\n    List.prototype.InsertBefore = function (value, iterator) {\r\n        //Nulls\r\n        if (iterator == null)\r\n            return;\r\n        var addBeforeNode = iterator.GetCurrentNode();\r\n        if (addBeforeNode == null)\r\n            return;\r\n        //New nodes next\r\n        var newNodesNext = addBeforeNode;\r\n        //New nodes previous\r\n        var newNodesPrevious = null;\r\n        if (addBeforeNode.previous != null)\r\n            newNodesPrevious = addBeforeNode.previous;\r\n        //New node\r\n        var newNode = new ListNode_1.ListNode(value, newNodesNext, newNodesPrevious);\r\n        //Redirect pointers to the new node\r\n        addBeforeNode.previous = newNode;\r\n        if (newNodesPrevious != null)\r\n            newNodesPrevious.next = newNode;\r\n        //Change \"back\" if new node is the last one\r\n        if (newNode.previous == null)\r\n            this.back = newNode;\r\n    };\r\n    /**\r\n     * Adds an element to the front - O(1)\r\n     * @param value Value to save\r\n     */\r\n    List.prototype.InsertFront = function (value) {\r\n        //If there is 0 elements\r\n        if (this.IsEmpty()) {\r\n            this.AddFirst(value);\r\n            return;\r\n        }\r\n        //Create new element\r\n        var newNode = new ListNode_1.ListNode(value, null, this.front);\r\n        //Redirect front element\r\n        this.front.next = newNode;\r\n        //Change front to the new node\r\n        this.front = newNode;\r\n        //Increase size\r\n        this.count += 1;\r\n    };\r\n    /**\r\n     * Adds an element to the back - O(1)\r\n     * @param value Value to save\r\n     */\r\n    List.prototype.InsertBack = function (value) {\r\n        //If there is 0 elements\r\n        if (this.IsEmpty()) {\r\n            this.AddFirst(value);\r\n            return;\r\n        }\r\n        //Create new element\r\n        var newNode = new ListNode_1.ListNode(value, this.back, null);\r\n        //Redirect back element\r\n        this.back.previous = newNode;\r\n        //Change back to the new node\r\n        this.back = newNode;\r\n        //Increase size\r\n        this.count += 1;\r\n    };\r\n    //--------------------------------------------------\r\n    //----------REMOVE----------------------------------\r\n    //--------------------------------------------------\r\n    List.prototype.RemoveAt = function (iterator) {\r\n        //Nulls\r\n        if (iterator == null)\r\n            return;\r\n        var elementToRemove = iterator.GetCurrentNode();\r\n        if (elementToRemove == null)\r\n            return;\r\n        //Corrent back and front\r\n        if (this.back == elementToRemove)\r\n            this.back = elementToRemove.next;\r\n        if (this.front == elementToRemove)\r\n            this.front = elementToRemove.previous;\r\n        //Redirect previous element\r\n        if (elementToRemove.previous != null)\r\n            elementToRemove.previous.next = elementToRemove.next;\r\n        //Redirect next element\r\n        if (elementToRemove.next != null)\r\n            elementToRemove.next.previous = elementToRemove.previous;\r\n        this.count -= 1;\r\n    };\r\n    List.prototype.Remove = function (item) {\r\n        this.RemoveAt(this.Find(item));\r\n    };\r\n    //--------------------------------------------------\r\n    //----------BUILD-----------------------------------\r\n    //--------------------------------------------------\r\n    List.prototype.Build = function (items) {\r\n        for (var i = 0; i < items.length; i++)\r\n            this.InsertFront(items[i]);\r\n    };\r\n    return List;\r\n}());\r\nexports.List = List;\r\n\n\n//# sourceURL=webpack://@drozdik.m/user-pages/./node_modules/@drozdik.m/double-linked-list/dist/src/List.js?");

/***/ }),

/***/ "./node_modules/@drozdik.m/double-linked-list/dist/src/ListIterator.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@drozdik.m/double-linked-list/dist/src/ListIterator.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("exports.__esModule = true;\r\n//--------------------------------------------------\r\n//----------LIST ITERATOR---------------------------\r\n//--------------------------------------------------\r\nvar ListIterator = /** @class */ (function () {\r\n    function ListIterator(current) {\r\n        if (current === void 0) { current = null; }\r\n        this.current = null;\r\n        this.current = current;\r\n    }\r\n    ListIterator.prototype.Next = function () {\r\n        if (this.current != null)\r\n            this.current = this.current.next;\r\n    };\r\n    ListIterator.prototype.Previous = function () {\r\n        if (this.current != null)\r\n            this.current = this.current.previous;\r\n    };\r\n    ListIterator.prototype.Value = function () {\r\n        if (this.current == null)\r\n            return null;\r\n        return this.current.value;\r\n    };\r\n    ListIterator.prototype.HasValue = function () {\r\n        return this.current != null;\r\n    };\r\n    /**\r\n    * Returns currently selected node. Do not use unless you know what you are doing!\r\n    * @returns Current node\r\n    */\r\n    ListIterator.prototype.GetCurrentNode = function () {\r\n        return this.current;\r\n    };\r\n    return ListIterator;\r\n}());\r\nexports.ListIterator = ListIterator;\r\n\n\n//# sourceURL=webpack://@drozdik.m/user-pages/./node_modules/@drozdik.m/double-linked-list/dist/src/ListIterator.js?");

/***/ }),

/***/ "./node_modules/@drozdik.m/double-linked-list/dist/src/ListNode.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@drozdik.m/double-linked-list/dist/src/ListNode.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("exports.__esModule = true;\r\n//--------------------------------------------------\r\n//----------LIST NODE-------------------------------\r\n//--------------------------------------------------\r\nvar ListNode = /** @class */ (function () {\r\n    /**\r\n     * Creates new instance of list node\r\n     * @param value Value of the node\r\n     * @param next Reference to the next node\r\n     * @param previous Reference to the previous node\r\n     */\r\n    function ListNode(value, next, previous) {\r\n        if (next === void 0) { next = null; }\r\n        if (previous === void 0) { previous = null; }\r\n        this.next = null;\r\n        this.previous = null;\r\n        this.value = null;\r\n        this.value = value;\r\n        this.next = next;\r\n        this.previous = previous;\r\n    }\r\n    return ListNode;\r\n}());\r\nexports.ListNode = ListNode;\r\n\n\n//# sourceURL=webpack://@drozdik.m/user-pages/./node_modules/@drozdik.m/double-linked-list/dist/src/ListNode.js?");

/***/ }),

/***/ "./node_modules/@drozdik.m/event/dist/src/Event.js":
/*!*********************************************************!*\
  !*** ./node_modules/@drozdik.m/event/dist/src/Event.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("exports.__esModule = true;\r\nvar double_linked_list_1 = __webpack_require__(/*! @drozdik.m/double-linked-list */ \"./node_modules/@drozdik.m/double-linked-list/dist/src/List.js\");\r\nvar Event = /** @class */ (function () {\r\n    //--------------------------------------------------\r\n    //---------CONSTRUCTOR------------------------------\r\n    //--------------------------------------------------\r\n    function Event() {\r\n        //--------------------------------------------------\r\n        //----------VARIABLES-------------------------------\r\n        //--------------------------------------------------\r\n        this.callbacks = new double_linked_list_1.List();\r\n    }\r\n    //--------------------------------------------------\r\n    //---------EVENTS-----------------------------------\r\n    //--------------------------------------------------\r\n    /**\r\n     * Adds function to be called on event trigger\r\n     * @param item Function to add\r\n     */\r\n    Event.prototype.Add = function (item) {\r\n        this.callbacks.InsertBack(item);\r\n    };\r\n    /**\r\n     * Removes functions to be triggered (only first occurence)\r\n     * @param item  Function to remove\r\n     */\r\n    Event.prototype.Remove = function (item) {\r\n        this.callbacks.Remove(item);\r\n    };\r\n    /**\r\n     * Calls all added functions\r\n     * @param caller Caller object\r\n     * @param args Arguments\r\n     */\r\n    Event.prototype.Invoke = function (caller, args) {\r\n        for (var it = this.callbacks.First(); it.HasValue(); it.Next())\r\n            it.Value()(caller, args);\r\n    };\r\n    //--------------------------------------------------\r\n    //---------CLONE------------------------------------\r\n    //--------------------------------------------------\r\n    Event.prototype.Clone = function () {\r\n        var res = new Event();\r\n        res.callbacks = this.callbacks.Clone();\r\n        return res;\r\n    };\r\n    //--------------------------------------------------\r\n    //---------COUNTS-----------------------------------\r\n    //--------------------------------------------------\r\n    Event.prototype.Count = function () {\r\n        return this.callbacks.Count();\r\n    };\r\n    Event.prototype.IsEmpty = function () {\r\n        return this.Count() == 0;\r\n    };\r\n    //--------------------------------------------------\r\n    //---------CLEARS-----------------------------------\r\n    //--------------------------------------------------\r\n    Event.prototype.Dispose = function () {\r\n        this.callbacks.Dispose();\r\n    };\r\n    Event.prototype.Clear = function () {\r\n        this.callbacks.Clear();\r\n    };\r\n    return Event;\r\n}());\r\nexports.Event = Event;\r\n\n\n//# sourceURL=webpack://@drozdik.m/user-pages/./node_modules/@drozdik.m/event/dist/src/Event.js?");

/***/ }),

/***/ "./node_modules/@drozdik.m/form/dist/args/FormArgs.js":
/*!************************************************************!*\
  !*** ./node_modules/@drozdik.m/form/dist/args/FormArgs.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("exports.__esModule = true;\r\nvar FormArgs = /** @class */ (function () {\r\n    function FormArgs() {\r\n    }\r\n    return FormArgs;\r\n}());\r\nexports.FormArgs = FormArgs;\r\n\n\n//# sourceURL=webpack://@drozdik.m/user-pages/./node_modules/@drozdik.m/form/dist/args/FormArgs.js?");

/***/ }),

/***/ "./node_modules/@drozdik.m/form/dist/args/FormInputArgs.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@drozdik.m/form/dist/args/FormInputArgs.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("exports.__esModule = true;\r\nvar FormInputArgs = /** @class */ (function () {\r\n    /**\r\n     * Form input arguments\r\n     * @param element Tracked element\r\n     */\r\n    function FormInputArgs(element) {\r\n        this.element = element;\r\n    }\r\n    /**\r\n     * Returns the element\r\n     * */\r\n    FormInputArgs.prototype.Element = function () {\r\n        return this.element;\r\n    };\r\n    /**\r\n     * Returns the elements ID\r\n     * */\r\n    FormInputArgs.prototype.Id = function () {\r\n        return this.element.id;\r\n    };\r\n    return FormInputArgs;\r\n}());\r\nexports.FormInputArgs = FormInputArgs;\r\n\n\n//# sourceURL=webpack://@drozdik.m/user-pages/./node_modules/@drozdik.m/form/dist/args/FormInputArgs.js?");

/***/ }),

/***/ "./node_modules/@drozdik.m/form/dist/inputs/FormInput.js":
/*!***************************************************************!*\
  !*** ./node_modules/@drozdik.m/form/dist/inputs/FormInput.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("exports.__esModule = true;\r\nvar event_1 = __webpack_require__(/*! @drozdik.m/event */ \"./node_modules/@drozdik.m/event/dist/src/Event.js\");\r\n//--------------------------------------------------\r\n//----------FORM INPUT------------------------------\r\n//--------------------------------------------------\r\nvar FormInput = /** @class */ (function () {\r\n    //--------------------------------------------------\r\n    //----------CONSTRUCTOR-----------------------------\r\n    //--------------------------------------------------\r\n    /**\r\n     * Form input element\r\n     * @param element Target HTML element\r\n     */\r\n    function FormInput(element) {\r\n        //--------------------------------------------------\r\n        //----------PROPERTIES------------------------------\r\n        //--------------------------------------------------\r\n        //Element\r\n        this.id = \"\";\r\n        this.element = null;\r\n        //Error list\r\n        this.hasErrorList = false;\r\n        this.errorList = null;\r\n        //Validation\r\n        this.isValid = false;\r\n        this.validations = [];\r\n        //On change event\r\n        this.OnChange = new event_1.Event();\r\n        if (!element) {\r\n            console.error(\"FormInput(\" + element + \") - element is null\");\r\n            return;\r\n        }\r\n        this.element = element;\r\n        this.id = this.element.id;\r\n        //Error list\r\n        this.errorList = document.getElementById(this.id + FormInput.errorListIdPostfix);\r\n        if (!this.errorList) {\r\n            this.element.insertAdjacentHTML(\"afterend\", \"<ul id=\\\"\" + this.id + FormInput.errorListIdPostfix + \"\\\" class=\\\"errorList\\\"></ul>\");\r\n            this.errorList = document.getElementById(this.id + FormInput.errorListIdPostfix);\r\n        }\r\n    }\r\n    //--------------------------------------------------\r\n    //----------VALIDATION------------------------------\r\n    //--------------------------------------------------\r\n    /**\r\n     * Returns true if the input is valid\r\n     * */\r\n    FormInput.prototype.IsValid = function () {\r\n        return this.isValid;\r\n    };\r\n    /**\r\n     * Validates current input. Returns true if input is valid, else false\r\n     * */\r\n    FormInput.prototype.Validate = function () {\r\n        //Validate & error messages\r\n        var errorMessages = [];\r\n        for (var i = 0; i < this.validations.length; i++) {\r\n            var isValid = this.validations[i].Validate();\r\n            if (!isValid)\r\n                errorMessages.push(this.validations[i].ErrorMessage());\r\n        }\r\n        this.SetErrorList(errorMessages);\r\n        //Set class\r\n        if (errorMessages.length == 0) {\r\n            this.Element().classList.add(FormInput.validInputClass);\r\n            this.Element().classList.remove(FormInput.invalidInputClass);\r\n        }\r\n        else {\r\n            this.Element().classList.remove(FormInput.validInputClass);\r\n            this.Element().classList.add(FormInput.invalidInputClass);\r\n        }\r\n        //Return\r\n        this.isValid = errorMessages.length == 0;\r\n        return this.isValid;\r\n    };\r\n    /**\r\n     * Adds new validation rule\r\n     * */\r\n    FormInput.prototype.AddValidation = function (validation) {\r\n        this.validations.push(validation);\r\n    };\r\n    //--------------------------------------------------\r\n    //----------ERROR LIST------------------------------\r\n    //--------------------------------------------------\r\n    /**\r\n     * Sets the error list by string array\r\n     * @param errorMessages\r\n     */\r\n    FormInput.prototype.SetErrorList = function (errorMessages) {\r\n        var res = \"\";\r\n        for (var i = 0; i < errorMessages.length; i++)\r\n            if (errorMessages[i] != \"\")\r\n                res += \"<li>\" + errorMessages[i] + \"</li>\";\r\n        this.errorList.innerHTML = res;\r\n    };\r\n    /**\r\n     * Clears the error list\r\n     * */\r\n    FormInput.prototype.EmptyErrorList = function () {\r\n        this.errorList.innerHTML = \"\";\r\n    };\r\n    //--------------------------------------------------\r\n    //----------ELEMENT---------------------------------\r\n    //--------------------------------------------------\r\n    /**\r\n     * Returns inputs ID\r\n     * */\r\n    FormInput.prototype.Id = function () {\r\n        return this.id;\r\n    };\r\n    /**\r\n     * Returns input element\r\n     * */\r\n    FormInput.prototype.Element = function () {\r\n        return this.element;\r\n    };\r\n    /**\r\n     * Resets the input\r\n     * */\r\n    FormInput.prototype.Reset = function () {\r\n        for (var i = 0; i < this.validations.length; i++)\r\n            this.validations[i].Reset();\r\n        this.EmptyErrorList();\r\n        this.Element().classList.remove(FormInput.validInputClass);\r\n        this.Element().classList.remove(FormInput.invalidInputClass);\r\n    };\r\n    FormInput.errorListIdPostfix = \"ErrorList\";\r\n    FormInput.validInputClass = \"validInput\";\r\n    FormInput.invalidInputClass = \"invalidInput\";\r\n    return FormInput;\r\n}());\r\nexports.FormInput = FormInput;\r\n\n\n//# sourceURL=webpack://@drozdik.m/user-pages/./node_modules/@drozdik.m/form/dist/inputs/FormInput.js?");

/***/ }),

/***/ "./node_modules/@drozdik.m/form/dist/inputs/NativeFormInput.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@drozdik.m/form/dist/inputs/NativeFormInput.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar FormInputArgs_1 = __webpack_require__(/*! ../args/FormInputArgs */ \"./node_modules/@drozdik.m/form/dist/args/FormInputArgs.js\");\r\nvar FormInput_1 = __webpack_require__(/*! ./FormInput */ \"./node_modules/@drozdik.m/form/dist/inputs/FormInput.js\");\r\n//--------------------------------------------------\r\n//----------FORM INPUT------------------------------\r\n//--------------------------------------------------\r\nvar NativeFormInput = /** @class */ (function (_super) {\r\n    __extends(NativeFormInput, _super);\r\n    function NativeFormInput() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    NativeFormInput.prototype.Initialize = function () {\r\n        var object = this;\r\n        var element = this.element;\r\n        this.element.addEventListener(\"change\", function () {\r\n            object.OnChange.Invoke(object, new FormInputArgs_1.FormInputArgs(element));\r\n        });\r\n        this.element.addEventListener(\"input\", function () {\r\n            object.OnChange.Invoke(object, new FormInputArgs_1.FormInputArgs(element));\r\n        });\r\n    };\r\n    NativeFormInput.prototype.Value = function () {\r\n        return this.element.value;\r\n    };\r\n    NativeFormInput.prototype.Reset = function () {\r\n        _super.prototype.Reset.call(this);\r\n        this.element.value = \"\";\r\n        this.element.checked = false;\r\n    };\r\n    return NativeFormInput;\r\n}(FormInput_1.FormInput));\r\nexports.NativeFormInput = NativeFormInput;\r\n\n\n//# sourceURL=webpack://@drozdik.m/user-pages/./node_modules/@drozdik.m/form/dist/inputs/NativeFormInput.js?");

/***/ }),

/***/ "./node_modules/@drozdik.m/form/dist/src/Form.js":
/*!*******************************************************!*\
  !*** ./node_modules/@drozdik.m/form/dist/src/Form.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("exports.__esModule = true;\r\nvar map_1 = __webpack_require__(/*! @drozdik.m/map */ \"./node_modules/@drozdik.m/map/dist/src/Map.js\");\r\nvar event_1 = __webpack_require__(/*! @drozdik.m/event */ \"./node_modules/@drozdik.m/event/dist/src/Event.js\");\r\nvar FormArgs_1 = __webpack_require__(/*! ../args/FormArgs */ \"./node_modules/@drozdik.m/form/dist/args/FormArgs.js\");\r\nvar Form = /** @class */ (function () {\r\n    //--------------------------------------------------\r\n    //----------CONSTRUCTOR-----------------------------\r\n    //--------------------------------------------------\r\n    /**\r\n     * Form object handling submit and validation\r\n     * @param id Id of target form\r\n     */\r\n    function Form(id) {\r\n        //--------------------------------------------------\r\n        //----------PROPERTIES------------------------------\r\n        //--------------------------------------------------\r\n        //Form\r\n        this.id = \"\";\r\n        this.formElement = null;\r\n        //Inputs\r\n        this.inputElements = new map_1.Map();\r\n        //Validation\r\n        this.isValid = false;\r\n        //Events\r\n        this.OnSubmit = new event_1.Event();\r\n        this.OnValidSubmit = new event_1.Event();\r\n        this.OnInvalidSubmit = new event_1.Event();\r\n        this.id = id;\r\n        this.formElement = document.getElementById(this.id);\r\n        if (!this.formElement) {\r\n            console.error(\"Form(#\" + this.id + \") - element not found\");\r\n            return;\r\n        }\r\n        this.CatchSubmit();\r\n    }\r\n    //--------------------------------------------------\r\n    //----------INPUTS----------------------------------\r\n    //--------------------------------------------------\r\n    /**\r\n     * Adds and initializes new input\r\n     * @param input\r\n     */\r\n    Form.prototype.AddInput = function (input) {\r\n        var object = this;\r\n        input.Initialize();\r\n        input.OnChange.Add(function () {\r\n            object.HandleInputChange(input);\r\n        });\r\n        this.inputElements.InsertValue(input.Id(), input);\r\n    };\r\n    /**\r\n     * Handles input change\r\n     * @param input Changed input\r\n     */\r\n    Form.prototype.HandleInputChange = function (input) {\r\n        input.Validate();\r\n    };\r\n    //--------------------------------------------------\r\n    //----------VALIDATION------------------------------\r\n    //--------------------------------------------------\r\n    /**\r\n     * Validates an element by given ID\r\n     * @param elementId\r\n     */\r\n    Form.prototype.ValidateElement = function (elementId) {\r\n        this.ValidateInput(this.inputElements.FindValue(elementId).PairValue());\r\n    };\r\n    /**\r\n     * Validates the input\r\n     * @param input Input\r\n     */\r\n    Form.prototype.ValidateInput = function (input) {\r\n        input.Validate();\r\n    };\r\n    /**\r\n     * Validates all inputs. Returns true if all inputs are valid, else false.\r\n     * */\r\n    Form.prototype.Validate = function () {\r\n        var formValid = true;\r\n        for (var it = this.inputElements.First(); it.HasValue(); it.Next()) {\r\n            var isValid = it.PairValue().Validate();\r\n            if (!isValid)\r\n                formValid = false;\r\n        }\r\n        this.isValid = formValid;\r\n        return this.isValid;\r\n    };\r\n    /**\r\n     * Returns true if the form is valid\r\n     * */\r\n    Form.prototype.IsValid = function () {\r\n        return this.isValid;\r\n    };\r\n    //--------------------------------------------------\r\n    //----------SUBMIT----------------------------------\r\n    //--------------------------------------------------\r\n    /**\r\n     * Submit catcher\r\n     * */\r\n    Form.prototype.CatchSubmit = function () {\r\n        var object = this;\r\n        var submitButtons = this.formElement.querySelectorAll(\"[type='submit']\");\r\n        for (var i = 0; i < submitButtons.length; i++) {\r\n            submitButtons[i].addEventListener(\"click\", function (e) {\r\n                e.preventDefault ? e.preventDefault() : (e.returnValue = false);\r\n                object.HandleSubmit();\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Submit handler\r\n     * */\r\n    Form.prototype.HandleSubmit = function () {\r\n        var isValid = this.Validate();\r\n        if (isValid)\r\n            this.OnValidSubmit.Invoke(this, new FormArgs_1.FormArgs());\r\n        else\r\n            this.OnInvalidSubmit.Invoke(this, new FormArgs_1.FormArgs());\r\n        this.OnSubmit.Invoke(this, new FormArgs_1.FormArgs());\r\n    };\r\n    /**\r\n     * Submits the form as usual\r\n     * */\r\n    Form.prototype.Submit = function () {\r\n        this.formElement.submit();\r\n    };\r\n    //--------------------------------------------------\r\n    //----------RESET-----------------------------------\r\n    //--------------------------------------------------\r\n    /**\r\n     * Resets the form (values and validation)\r\n     * */\r\n    Form.prototype.Reset = function () {\r\n        for (var it = this.inputElements.First(); it.HasValue(); it.Next())\r\n            it.PairValue().Reset();\r\n    };\r\n    return Form;\r\n}());\r\nexports.Form = Form;\r\n\n\n//# sourceURL=webpack://@drozdik.m/user-pages/./node_modules/@drozdik.m/form/dist/src/Form.js?");

/***/ }),

/***/ "./node_modules/@drozdik.m/form/dist/validation/FormInputValidation.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@drozdik.m/form/dist/validation/FormInputValidation.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("exports.__esModule = true;\r\n//--------------------------------------------------\r\n//----------FORM VALIDATION ELEMENTS----------------\r\n//--------------------------------------------------\r\nvar FormInputValidation = /** @class */ (function () {\r\n    //Constructor\r\n    function FormInputValidation(input, errorMessage) {\r\n        //Error message\r\n        this.errorMessage = \"\";\r\n        this.input = input;\r\n        this.errorMessage = errorMessage;\r\n    }\r\n    /**\r\n     * Returns current input\r\n     * */\r\n    FormInputValidation.prototype.Input = function () {\r\n        return this.input;\r\n    };\r\n    /**\r\n     * Resets the validation process\r\n     * @param element\r\n     */\r\n    FormInputValidation.prototype.Reset = function () {\r\n    };\r\n    /**\r\n     * Returns error message text\r\n     * */\r\n    FormInputValidation.prototype.ErrorMessage = function () {\r\n        return this.errorMessage;\r\n    };\r\n    return FormInputValidation;\r\n}());\r\nexports.FormInputValidation = FormInputValidation;\r\n\n\n//# sourceURL=webpack://@drozdik.m/user-pages/./node_modules/@drozdik.m/form/dist/validation/FormInputValidation.js?");

/***/ }),

/***/ "./node_modules/@drozdik.m/form/dist/validation/FormValidation_MustBeEmail.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@drozdik.m/form/dist/validation/FormValidation_MustBeEmail.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar FormInputValidation_1 = __webpack_require__(/*! ./FormInputValidation */ \"./node_modules/@drozdik.m/form/dist/validation/FormInputValidation.js\");\r\n__webpack_require__(/*! @drozdik.m/string-extensions/dist/IsEmail */ \"./node_modules/@drozdik.m/string-extensions/dist/IsEmail.js\");\r\nvar FormValidation_MustBeEmail = /** @class */ (function (_super) {\r\n    __extends(FormValidation_MustBeEmail, _super);\r\n    function FormValidation_MustBeEmail() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    FormValidation_MustBeEmail.prototype.Validate = function () {\r\n        return this.Input().Value().IsEmail();\r\n    };\r\n    return FormValidation_MustBeEmail;\r\n}(FormInputValidation_1.FormInputValidation));\r\nexports.FormValidation_MustBeEmail = FormValidation_MustBeEmail;\r\n\n\n//# sourceURL=webpack://@drozdik.m/user-pages/./node_modules/@drozdik.m/form/dist/validation/FormValidation_MustBeEmail.js?");

/***/ }),

/***/ "./node_modules/@drozdik.m/form/dist/validation/FormValidation_MustHaveValue.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@drozdik.m/form/dist/validation/FormValidation_MustHaveValue.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar FormInputValidation_1 = __webpack_require__(/*! ./FormInputValidation */ \"./node_modules/@drozdik.m/form/dist/validation/FormInputValidation.js\");\r\nvar FormValidation_MustHaveValue = /** @class */ (function (_super) {\r\n    __extends(FormValidation_MustHaveValue, _super);\r\n    function FormValidation_MustHaveValue() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    FormValidation_MustHaveValue.prototype.Validate = function () {\r\n        var value = this.Input().Value();\r\n        return typeof value != \"undefined\" && value != \"\";\r\n    };\r\n    return FormValidation_MustHaveValue;\r\n}(FormInputValidation_1.FormInputValidation));\r\nexports.FormValidation_MustHaveValue = FormValidation_MustHaveValue;\r\n\n\n//# sourceURL=webpack://@drozdik.m/user-pages/./node_modules/@drozdik.m/form/dist/validation/FormValidation_MustHaveValue.js?");

/***/ }),

/***/ "./node_modules/@drozdik.m/form/dist/validation/formValidation_MustHaveSameValueAs.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@drozdik.m/form/dist/validation/formValidation_MustHaveSameValueAs.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar FormInputValidation_1 = __webpack_require__(/*! ./FormInputValidation */ \"./node_modules/@drozdik.m/form/dist/validation/FormInputValidation.js\");\r\nvar FormValidation_MustHaveSameValueAs = /** @class */ (function (_super) {\r\n    __extends(FormValidation_MustHaveSameValueAs, _super);\r\n    function FormValidation_MustHaveSameValueAs(thisInput, theOtherInput, errorMessage) {\r\n        var _this = _super.call(this, thisInput, errorMessage) || this;\r\n        _this.theOtherInput = theOtherInput;\r\n        theOtherInput.OnChange.Add(function () {\r\n            thisInput.Validate();\r\n        });\r\n        return _this;\r\n    }\r\n    FormValidation_MustHaveSameValueAs.prototype.Validate = function () {\r\n        var value = this.Input().Value();\r\n        var otherValue = this.theOtherInput.Value();\r\n        return value == otherValue;\r\n    };\r\n    return FormValidation_MustHaveSameValueAs;\r\n}(FormInputValidation_1.FormInputValidation));\r\nexports.FormValidation_MustHaveSameValueAs = FormValidation_MustHaveSameValueAs;\r\n\n\n//# sourceURL=webpack://@drozdik.m/user-pages/./node_modules/@drozdik.m/form/dist/validation/formValidation_MustHaveSameValueAs.js?");

/***/ }),

/***/ "./node_modules/@drozdik.m/map/dist/src/Map.js":
/*!*****************************************************!*\
  !*** ./node_modules/@drozdik.m/map/dist/src/Map.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("exports.__esModule = true;\r\nvar avl_tree_1 = __webpack_require__(/*! @drozdik.m/avl-tree */ \"./node_modules/@drozdik.m/avl-tree/dist/src/AVLTree.js\");\r\nvar KeyValuePair_1 = __webpack_require__(/*! @drozdik.m/pair/dist/KeyValuePair */ \"./node_modules/@drozdik.m/pair/dist/KeyValuePair.js\");\r\nvar MapIterator_1 = __webpack_require__(/*! ./MapIterator */ \"./node_modules/@drozdik.m/map/dist/src/MapIterator.js\");\r\nvar comparator_handler_1 = __webpack_require__(/*! @drozdik.m/comparator-handler */ \"./node_modules/@drozdik.m/comparator-handler/dist/src/ComparatorHandler.js\");\r\nvar Map = /** @class */ (function () {\r\n    //private keyValueComparator: IComparator<KeyValuePair<K, V>>;\r\n    //--------------------------------------------------\r\n    //---------CONSTRUCTOR------------------------------\r\n    //--------------------------------------------------\r\n    /**\r\n     * Creates new instance of the object.\r\n     * @param items Initial items in the binary search tree.\r\n     * @param comparator Key Comparator - It automatically detects IComparable classes.\r\n     */\r\n    function Map(items, comparator) {\r\n        if (items === void 0) { items = []; }\r\n        if (comparator === void 0) { comparator = null; }\r\n        //--------------------------------------------------\r\n        //----------VARIABLES-------------------------------\r\n        //--------------------------------------------------\r\n        this.avlTree = null;\r\n        var keyComp = new comparator_handler_1.ComparatorHandler(comparator);\r\n        var keyValueComparator = function (item1, item2) {\r\n            return keyComp.Compare(item1.Key(), item2.Key());\r\n        };\r\n        this.avlTree = new avl_tree_1.AVLTree(items, keyValueComparator);\r\n    }\r\n    //--------------------------------------------------\r\n    //---------VALUE------------------------------------\r\n    //--------------------------------------------------\r\n    /**\r\n     * Inserts new pair\r\n     * @param item New pair\r\n     */\r\n    Map.prototype.InsertPair = function (item) {\r\n        this.avlTree.Insert(item);\r\n    };\r\n    /**\r\n     * Creates and inserts KeyValuePair based on inserted key and value\r\n     * @param item\r\n     */\r\n    Map.prototype.InsertValue = function (key, value) {\r\n        this.InsertPair(new KeyValuePair_1.KeyValuePair(key, value));\r\n    };\r\n    Map.prototype.Insert = function (item) {\r\n        this.InsertPair(item);\r\n    };\r\n    /**\r\n     * Finds a pair by given key and returns its iterator\r\n     * @param item\r\n     */\r\n    Map.prototype.FindPair = function (item) {\r\n        return new MapIterator_1.MapIterator(this.avlTree.Find(item));\r\n    };\r\n    /**\r\n     * Finds value by key\r\n     * @param key Key\r\n     */\r\n    Map.prototype.FindValue = function (key) {\r\n        return new MapIterator_1.MapIterator(this.avlTree.Find(new KeyValuePair_1.KeyValuePair(key, null)));\r\n    };\r\n    Map.prototype.Find = function (item) {\r\n        return this.FindValue(item.Key());\r\n    };\r\n    /**\r\n     * Removes a pair by given iterator\r\n     * @param iterator Iterator\r\n     */\r\n    Map.prototype.RemoveValueAt = function (iterator) {\r\n        if (!iterator.HasValue())\r\n            return;\r\n        this.avlTree.RemoveAt(iterator.AVLTreeIterator());\r\n    };\r\n    Map.prototype.RemoveAt = function (iterator) {\r\n        this.RemoveValueAt(iterator);\r\n    };\r\n    Map.prototype.Remove = function (item) {\r\n        this.RemoveValue(item.Key());\r\n    };\r\n    /**\r\n     * Removes a pair\r\n     * @param item Pair to remove\r\n     */\r\n    Map.prototype.RemovePair = function (item) {\r\n        this.avlTree.Remove(item);\r\n    };\r\n    /**\r\n     * Removes a value by given key\r\n     * @param key Key\r\n     */\r\n    Map.prototype.RemoveValue = function (key) {\r\n        this.RemovePair(new KeyValuePair_1.KeyValuePair(key, null));\r\n    };\r\n    /**\r\n     * Updates pair at given position\r\n     * @param newValue New pair\r\n     * @param iterator Iterator\r\n     */\r\n    Map.prototype.UpdatePairAt = function (newValue, iterator) {\r\n        this.avlTree.UpdateAt(newValue, iterator.AVLTreeIterator());\r\n    };\r\n    /**\r\n     * Sets new value on iterator position\r\n     * @param newValue\r\n     * @param iterator\r\n     */\r\n    Map.prototype.UpdateValueAt = function (newValue, iterator) {\r\n        if (iterator.HasValue())\r\n            iterator.Pair().SetValue(newValue);\r\n    };\r\n    Map.prototype.UpdateAt = function (newValue, iterator) {\r\n        this.UpdateValueAt(newValue.Value(), iterator);\r\n    };\r\n    /**\r\n     * Updates value at given key position\r\n     * @param key Key\r\n     * @param newValue New Value\r\n     */\r\n    Map.prototype.UpdateValue = function (key, newValue) {\r\n        this.UpdateValueAt(newValue, this.FindValue(key));\r\n    };\r\n    Map.prototype.Update = function (oldValue, newValue) {\r\n        this.UpdateValue(oldValue.Key(), newValue.Value());\r\n    };\r\n    //--------------------------------------------------\r\n    //---------AT---------------------------------------\r\n    //--------------------------------------------------\r\n    Map.prototype.At = function (index) {\r\n        return this.AtIterator(index).Pair();\r\n    };\r\n    Map.prototype.AtIterator = function (index) {\r\n        return new MapIterator_1.MapIterator(this.avlTree.AtIterator(index));\r\n    };\r\n    //--------------------------------------------------\r\n    //---------MIN-MAX----------------------------------\r\n    //--------------------------------------------------\r\n    Map.prototype.FindMin = function () {\r\n        return new MapIterator_1.MapIterator(this.avlTree.FindMin());\r\n    };\r\n    Map.prototype.FindMax = function () {\r\n        return new MapIterator_1.MapIterator(this.avlTree.FindMax());\r\n    };\r\n    //--------------------------------------------------\r\n    //---------CLEARS-----------------------------------\r\n    //--------------------------------------------------\r\n    Map.prototype.Dispose = function () {\r\n        this.avlTree.Dispose();\r\n        this.avlTree = null;\r\n    };\r\n    Map.prototype.Clear = function () {\r\n        this.avlTree.Clear();\r\n    };\r\n    //--------------------------------------------------\r\n    //---------ITERATOR---------------------------------\r\n    //--------------------------------------------------\r\n    Map.prototype.First = function () {\r\n        return new MapIterator_1.MapIterator(this.avlTree.First());\r\n    };\r\n    Map.prototype.Last = function () {\r\n        return new MapIterator_1.MapIterator(this.avlTree.Last());\r\n    };\r\n    //--------------------------------------------------\r\n    //---------CLONE------------------------------------\r\n    //--------------------------------------------------\r\n    Map.prototype.Clone = function () {\r\n        var res = new Map();\r\n        res.avlTree = this.avlTree.Clone();\r\n        //res.keyValueComparator = this.keyValueComparator;\r\n        return res;\r\n    };\r\n    //--------------------------------------------------\r\n    //---------OTHERS-----------------------------------\r\n    //--------------------------------------------------\r\n    Map.prototype.Build = function (items) {\r\n        this.avlTree.Build(items);\r\n    };\r\n    Map.prototype.Count = function () {\r\n        return this.avlTree.Count();\r\n    };\r\n    Map.prototype.IsEmpty = function () {\r\n        return this.avlTree.IsEmpty();\r\n    };\r\n    return Map;\r\n}());\r\nexports.Map = Map;\r\n\n\n//# sourceURL=webpack://@drozdik.m/user-pages/./node_modules/@drozdik.m/map/dist/src/Map.js?");

/***/ }),

/***/ "./node_modules/@drozdik.m/map/dist/src/MapIterator.js":
/*!*************************************************************!*\
  !*** ./node_modules/@drozdik.m/map/dist/src/MapIterator.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("exports.__esModule = true;\r\nvar MapIterator = /** @class */ (function () {\r\n    //--------------------------------------------------\r\n    //----------CONSTRUCTOR-----------------------------\r\n    //--------------------------------------------------\r\n    function MapIterator(iterator) {\r\n        //--------------------------------------------------\r\n        //----------VARIABLE--------------------------------\r\n        //-------------------------------------------------\r\n        this.iterator = null;\r\n        this.iterator = iterator;\r\n    }\r\n    //--------------------------------------------------\r\n    //----------VALUE-----------------------------------\r\n    //--------------------------------------------------\r\n    /**\r\n     * Returns current pair\r\n     * */\r\n    MapIterator.prototype.Pair = function () {\r\n        return this.iterator.Value();\r\n    };\r\n    MapIterator.prototype.Value = function () {\r\n        if (!this.HasValue())\r\n            return null;\r\n        return this.iterator.Value();\r\n    };\r\n    MapIterator.prototype.PairValue = function () {\r\n        if (!this.HasValue())\r\n            return null;\r\n        return this.iterator.Value().Value();\r\n    };\r\n    MapIterator.prototype.PairKey = function () {\r\n        if (!this.HasValue())\r\n            return null;\r\n        return this.iterator.Value().Key();\r\n    };\r\n    MapIterator.prototype.HasValue = function () {\r\n        return this.iterator.HasValue();\r\n    };\r\n    //--------------------------------------------------\r\n    //----------MOVE------------------------------------\r\n    //--------------------------------------------------\r\n    MapIterator.prototype.Previous = function () {\r\n        this.iterator.Previous();\r\n    };\r\n    MapIterator.prototype.Next = function () {\r\n        this.iterator.Next();\r\n    };\r\n    //--------------------------------------------------\r\n    //----------ITERATOR--------------------------------\r\n    //--------------------------------------------------\r\n    /**\r\n     * Returns currently used AVL Tree iterator\r\n     * */\r\n    MapIterator.prototype.AVLTreeIterator = function () {\r\n        return this.iterator;\r\n    };\r\n    return MapIterator;\r\n}());\r\nexports.MapIterator = MapIterator;\r\n\n\n//# sourceURL=webpack://@drozdik.m/user-pages/./node_modules/@drozdik.m/map/dist/src/MapIterator.js?");

/***/ }),

/***/ "./node_modules/@drozdik.m/pair/dist/KeyValuePair.js":
/*!***********************************************************!*\
  !*** ./node_modules/@drozdik.m/pair/dist/KeyValuePair.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("exports.__esModule = true;\r\nvar KeyValuePair_1 = __webpack_require__(/*! ./src/KeyValuePair */ \"./node_modules/@drozdik.m/pair/dist/src/KeyValuePair.js\");\r\nexports.KeyValuePair = KeyValuePair_1.KeyValuePair;\r\n\n\n//# sourceURL=webpack://@drozdik.m/user-pages/./node_modules/@drozdik.m/pair/dist/KeyValuePair.js?");

/***/ }),

/***/ "./node_modules/@drozdik.m/pair/dist/src/KeyValuePair.js":
/*!***************************************************************!*\
  !*** ./node_modules/@drozdik.m/pair/dist/src/KeyValuePair.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("exports.__esModule = true;\r\nvar KeyValuePair = /** @class */ (function () {\r\n    /**\r\n     * Creates new instance of a pair\r\n     * @param key Key (default = null)\r\n     * @param value Value (default = null)\r\n     */\r\n    function KeyValuePair(key, value) {\r\n        if (key === void 0) { key = null; }\r\n        if (value === void 0) { value = null; }\r\n        this.key = null;\r\n        this.value = null;\r\n        this.key = key;\r\n        this.value = value;\r\n    }\r\n    /**\r\n     * Returns key\r\n     * */\r\n    KeyValuePair.prototype.Key = function () {\r\n        return this.key;\r\n    };\r\n    /**\r\n     * Returns value\r\n     * */\r\n    KeyValuePair.prototype.Value = function () {\r\n        return this.value;\r\n    };\r\n    /**\r\n     * Sets value\r\n     * @param value New value\r\n     */\r\n    KeyValuePair.prototype.SetValue = function (value) {\r\n        this.value = value;\r\n    };\r\n    /**\r\n    * To string\r\n    */\r\n    KeyValuePair.prototype.toString = function () {\r\n        return this.key + \", \" + this.value;\r\n    };\r\n    KeyValuePair.prototype.Clone = function () {\r\n        //Copy key\r\n        var newKey;\r\n        if (typeof this.key.Clone != \"undefined\")\r\n            newKey = this.key.Clone();\r\n        else\r\n            newKey = this.key;\r\n        //Copy value\r\n        var newValue;\r\n        if (typeof this.value.Clone != \"undefined\")\r\n            newValue = this.value.Clone();\r\n        else\r\n            newValue = this.value;\r\n        var res = new KeyValuePair(newKey, newValue);\r\n        return res;\r\n    };\r\n    return KeyValuePair;\r\n}());\r\nexports.KeyValuePair = KeyValuePair;\r\n\n\n//# sourceURL=webpack://@drozdik.m/user-pages/./node_modules/@drozdik.m/pair/dist/src/KeyValuePair.js?");

/***/ }),

/***/ "./node_modules/@drozdik.m/string-extensions/dist/IsEmail.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@drozdik.m/string-extensions/dist/IsEmail.js ***!
  \*******************************************************************/
/***/ (function() {

eval("//--------------------------------------------------\r\n//---------IS EMAIL---------------------------------\r\n//--------------------------------------------------\r\nString.prototype.IsEmail = function () {\r\n    var format = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return format.test(this);\r\n};\r\n\n\n//# sourceURL=webpack://@drozdik.m/user-pages/./node_modules/@drozdik.m/string-extensions/dist/IsEmail.js?");

/***/ }),

/***/ "./node_modules/@drozdik.m/window-events/dist/args/ResizeArgs.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@drozdik.m/window-events/dist/args/ResizeArgs.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar WindowEventArgs_1 = __webpack_require__(/*! ./WindowEventArgs */ \"./node_modules/@drozdik.m/window-events/dist/args/WindowEventArgs.js\");\r\nvar ResizeArgs = /** @class */ (function (_super) {\r\n    __extends(ResizeArgs, _super);\r\n    function ResizeArgs() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return ResizeArgs;\r\n}(WindowEventArgs_1.WindowEventArgs));\r\nexports.ResizeArgs = ResizeArgs;\r\n\n\n//# sourceURL=webpack://@drozdik.m/user-pages/./node_modules/@drozdik.m/window-events/dist/args/ResizeArgs.js?");

/***/ }),

/***/ "./node_modules/@drozdik.m/window-events/dist/args/ScrollArgs.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@drozdik.m/window-events/dist/args/ScrollArgs.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar WindowEventArgs_1 = __webpack_require__(/*! ./WindowEventArgs */ \"./node_modules/@drozdik.m/window-events/dist/args/WindowEventArgs.js\");\r\nvar ScrollArgs = /** @class */ (function (_super) {\r\n    __extends(ScrollArgs, _super);\r\n    function ScrollArgs() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return ScrollArgs;\r\n}(WindowEventArgs_1.WindowEventArgs));\r\nexports.ScrollArgs = ScrollArgs;\r\n\n\n//# sourceURL=webpack://@drozdik.m/user-pages/./node_modules/@drozdik.m/window-events/dist/args/ScrollArgs.js?");

/***/ }),

/***/ "./node_modules/@drozdik.m/window-events/dist/args/WindowEventArgs.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@drozdik.m/window-events/dist/args/WindowEventArgs.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("exports.__esModule = true;\r\nvar dimensions_helper_1 = __webpack_require__(/*! @drozdik.m/dimensions-helper */ \"./node_modules/@drozdik.m/dimensions-helper/dist/src/DimensionsHelper.js\");\r\nvar WindowEventArgs = /** @class */ (function () {\r\n    function WindowEventArgs(element) {\r\n        this.element = element;\r\n    }\r\n    /**\r\n     * Returns new Dimensions helper\r\n     * */\r\n    WindowEventArgs.prototype.DimensionsHelper = function () {\r\n        return new dimensions_helper_1.DimensionsHelper(this.element);\r\n    };\r\n    /**\r\n     * Returns element\r\n     * */\r\n    WindowEventArgs.prototype.Element = function () {\r\n        return this.element;\r\n    };\r\n    /**\r\n     * Returns scrollTop value\r\n     * */\r\n    WindowEventArgs.prototype.ScrollTop = function () {\r\n        return this.element.scrollTop;\r\n    };\r\n    return WindowEventArgs;\r\n}());\r\nexports.WindowEventArgs = WindowEventArgs;\r\n\n\n//# sourceURL=webpack://@drozdik.m/user-pages/./node_modules/@drozdik.m/window-events/dist/args/WindowEventArgs.js?");

/***/ }),

/***/ "./node_modules/@drozdik.m/window-events/dist/src/WindowEvents.js":
/*!************************************************************************!*\
  !*** ./node_modules/@drozdik.m/window-events/dist/src/WindowEvents.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("exports.__esModule = true;\r\nvar event_1 = __webpack_require__(/*! @drozdik.m/event */ \"./node_modules/@drozdik.m/event/dist/src/Event.js\");\r\nvar ResizeArgs_1 = __webpack_require__(/*! ../args/ResizeArgs */ \"./node_modules/@drozdik.m/window-events/dist/args/ResizeArgs.js\");\r\nexports.ResizeArgs = ResizeArgs_1.ResizeArgs;\r\nvar ScrollArgs_1 = __webpack_require__(/*! ../args/ScrollArgs */ \"./node_modules/@drozdik.m/window-events/dist/args/ScrollArgs.js\");\r\nexports.ScrollArgs = ScrollArgs_1.ScrollArgs;\r\nvar WindowEventArgs_1 = __webpack_require__(/*! ../args/WindowEventArgs */ \"./node_modules/@drozdik.m/window-events/dist/args/WindowEventArgs.js\");\r\nexports.WindowEventArgs = WindowEventArgs_1.WindowEventArgs;\r\nvar WindowEvents = /** @class */ (function () {\r\n    function WindowEvents() {\r\n    }\r\n    /**\r\n     * Initializes the window events (only once)\r\n     * */\r\n    WindowEvents.Initialize = function () {\r\n        //Init lock\r\n        if (WindowEvents.initialized)\r\n            return;\r\n        WindowEvents.initialized = true;\r\n        //On DOM ready\r\n        document.addEventListener(\"DOMContentLoaded\", function () {\r\n            WindowEvents.OnDOMReady.Invoke(WindowEvents, new WindowEventArgs_1.WindowEventArgs(window.document.body));\r\n        });\r\n        //On document load\r\n        window.addEventListener(\"load\", function () {\r\n            WindowEvents.OnLoad.Invoke(WindowEvents, new WindowEventArgs_1.WindowEventArgs(window.document.body));\r\n        });\r\n        //On document resize\r\n        window.addEventListener(\"resize\", function () {\r\n            WindowEvents.InvokeResize();\r\n        });\r\n        //On document scroll\r\n        window.addEventListener(\"scroll\", function () {\r\n            WindowEvents.InvokeScroll();\r\n        });\r\n    };\r\n    /**\r\n     * Invokes resize event\r\n     * */\r\n    WindowEvents.InvokeResize = function () {\r\n        WindowEvents.OnResize.Invoke(WindowEvents, new WindowEventArgs_1.WindowEventArgs(window.document.body));\r\n        WindowEvents.OnScrollAndResize.Invoke(WindowEvents, new WindowEventArgs_1.WindowEventArgs(window.document.body));\r\n    };\r\n    /**\r\n     * Invokes scroll event\r\n     * */\r\n    WindowEvents.InvokeScroll = function () {\r\n        WindowEvents.OnScroll.Invoke(WindowEvents, new WindowEventArgs_1.WindowEventArgs(window.document.body));\r\n        WindowEvents.OnScrollAndResize.Invoke(WindowEvents, new WindowEventArgs_1.WindowEventArgs(window.document.body));\r\n    };\r\n    /**\r\n     * Returns window width\r\n     * */\r\n    WindowEvents.Width = function () {\r\n        return document.documentElement.clientWidth\r\n            || window.innerWidth\r\n            || document.body.clientWidth;\r\n    };\r\n    /**\r\n     * Returns window height\r\n     * */\r\n    WindowEvents.Height = function () {\r\n        return document.documentElement.clientHeight\r\n            || window.innerHeight\r\n            || document.body.clientHeight;\r\n    };\r\n    WindowEvents.OnDOMReady = new event_1.Event();\r\n    WindowEvents.OnLoad = new event_1.Event();\r\n    WindowEvents.OnResize = new event_1.Event();\r\n    WindowEvents.OnScroll = new event_1.Event();\r\n    WindowEvents.OnScrollAndResize = new event_1.Event();\r\n    WindowEvents.initialized = false;\r\n    return WindowEvents;\r\n}());\r\nexports.WindowEvents = WindowEvents;\r\nWindowEvents.Initialize();\r\n\n\n//# sourceURL=webpack://@drozdik.m/user-pages/./node_modules/@drozdik.m/window-events/dist/src/WindowEvents.js?");

/***/ })

}]);